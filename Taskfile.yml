version: '3'

tasks:
  # Development workflow
  dev:
    desc: Format, lint, and test code
    cmds:
      - cargo fmt
      - cargo clippy

  # Comprehensive quality check
  quality:
    desc: Run all quality checks (formatting, linting, tests, file size)
    cmds:
      - cargo fmt -- --check
      - cargo clippy --all-targets --all-features -- -D warnings
      - cargo test
      - |
        find . -name "*.rs" -not -path "./target/*" | xargs wc -l | awk '$1 > 200 && $2 != "total" {print "⚠️  " $2 " (" $1 " lines) - create an aggressive refactoring plan that completely eliminates this bloated file by breaking it into focused, single-responsibility modules, removing all legacy patterns, deleting unused code without any #[allow(dead_code)] bullshit, and modernizing the API contracts - I want zero warnings, zero dead code, and a clean architecture that actually makes sense."}' | head -10

  # Run CLI application
  run-cli:
    desc: Run CLI with workflow.json
    deps: [dev]
    env:
      RUST_LOG: see_core=trace
    cmds:
      - cargo run -p cli -- --file workflow.json

  # Run GUI application
  run-gui:
    desc: Run GUI with dx CLI
    deps: [dev,tailwind-build,icons-build,build-visualizer]
    env:
      RUST_LOG: see_core=trace
    cmds:
      - dx run --package gui

  # Development server with hot-reloading
  serve-gui:
    desc: Start GUI development server with hot-reloading
    deps: [dev,tailwind-build,icons-build,build-visualizer]
    cmds:
      - dx serve --package gui

  # Build release binary
  build-release:
    desc: Build optimized release binary with dx CLI
    deps: [dev,tailwind-build,icons-build,build-visualizer]
    cmds:
      - dx build --package gui

  # Clean build artifacts
  clean:
    desc: Clean build artifacts
    cmds:
      - cargo clean
      - dx clean
      - rm -rf react-flow-app/node_modules
      - rm -rf tailwind/node_modules
      - rm -rf gui/assets/workflow-visualizer
      - rm -f gui/assets/tailwind.css

  # Build Tailwind CSS for both apps
  tailwind-build:
    desc: Build Tailwind CSS for main GUI and React Flow apps
    dir: tailwind
    cmds:
      - npm install
      - npm run build

  # Build Icons
  icons-build:
    desc: Build SVG icons for the GUI app
    dir: icons
    cmds:
      - npm install
      - npm run build

  # Build React Flow visualizer
  build-visualizer:
    desc: Build React Flow workflow visualizer
    dir: react-flow-app
    cmds:
      - npm install
      - npm run build
